machine euclid
  sees definitions limits
  
var u type u : 0..k init u:=m ; var v type v : 0..k init v:=n

algorithm
  while: u /= 0 
    invariant GCD[{m↦n}] = GCD[{u↦v}]
  	variant u + v
  do
    if: u < v then
      @v v := v - u 
    else
      @u u := u - v 
    end 
  end ;
  assert: m↦n↦v ∈ GCD
end

end
